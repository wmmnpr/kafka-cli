version: "3.8"
services:

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    container_name: zookeeper
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - '9092:9092'
      - '9099:9092'
    environment:
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_NUM_PARTITIONS=4
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=DOCKER_INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=DOCKER_INTERNAL://:9099,EXTERNAL://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=EXTERNAL://localhost:9092,DOCKER_INTERNAL://kafka:9099
      - KAFKA_INTER_BROKER_LISTENER_NAME=DOCKER_INTERNAL
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ENABLE_KRAFT=no

    depends_on:
      - zookeeper

  kafka-cli:
    image: wmmnpr/kafka-cli
    container_name: kafka-cli  
    # command: ["/bin/sh", "-c", "while true; do sleep 10; echo 'hi'; done"]
    environment:
      BOOTSTRAP_SERVER: kafka:9099
      CREATE_TOPICS: >-
        publish.financialTransaction.1.dev:2:1,
        publish.fxrate.1.dev:2:1,
        stream.AccountTreeNode.1.dev:4:1,
        stream.SapAccountIdIndex.1.dev:4:1
    depends_on:
      - kafka
      - zookeeper

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:master  
    depends_on:
      kafka:
        condition: service_started
      zookeeper:
        condition: service_started
    ports:
      - 8081:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
      # KAFKA_CLUSTERS_0_NAME: wizard_test
      # KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    volumes:
      - "./ui-kafka-config.yml:/etc/kafkaui/dynamic_config.yaml"